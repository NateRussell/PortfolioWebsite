@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model IEnumerable<PortfolioWebsite.Models.Comment>



@foreach (var item in Model.Reverse())
{
<li id="Comment_Group_@item.ID">
    @if (!ViewData.Keys.Contains("WorkID"))
    {
        @*
            <a asp-controller="Works" asp-action="Details" asp-route-id="@item.Work.ID">@item.Work.Title</a>
        *@
    }
    <div id="Comment_@item.ID">
        @await Html.PartialAsync("/Views/Comments/_Details.cshtml", item)
    </div>

    @*If user is authenticated, allow them to post replies to the comment.*@
    @if (User.Identity.IsAuthenticated)
    {
        ViewDataDictionary replyData = new ViewDataDictionary(ViewData);
        replyData.Add("ParentID", item.ID);
        @await Html.PartialAsync("/Views/Comments/_Create.cshtml", new Comment(), replyData);
    }
    @*If the comment has replies, show them.*@
    <ul id="Replies_For_Comment_@item.ID">
        @if (item.Replies != null && item.Replies.Count > 0)
        {

            @await Html.PartialAsync("/Views/Comments/_Index.cshtml", item.Replies)

        }
    </ul>
</li>
}

